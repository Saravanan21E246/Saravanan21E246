#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <MySQL_Connection.h>
#include <MySQL_Cursor.h>
#include "EmonLib.h"                  
EnergyMonitor emon1, emon2, emon3, emon4, emon5,emon6;

 LiquidCrystal_I2C lcd(0x27, 16, 2); 


char ssid[] = "your_wifi_ssid";
char pass[] = "your_wifi_password";

IPAddress server_ip(192, 168, 1, 100);
char user[] = "your_mysql_username";
char password[] = "your_mysql_password";
char db[] = "your_database_name";
char table[] = "sensor_data";

WiFiClient client;
MySQL_Connection conn((Client*)&client);

void setup() {
  Serial.begin(115200);
 emon1.voltage(A0, 222, 1.7);
  emon2.voltage(A3, 222, 1.7); 
  emon3.voltage(A6, 222, 1.7); 
  emon4.current(A7, 8);
  emon5.current(A4, 8);
  emon6.current(A5, 8);

  lcd.init();
  lcd.backlight();
  lcd.clear();

 
  Serial.println("Connecting to Wi-Fi...");
  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  
  Serial.println("Connecting to MySQL server...");
  if (conn.connect(server_ip, 3306, user, password, db)) {
    Serial.println("Connected to MySQL server");
  } else {
    Serial.println("Connection to MySQL server failed.");
  }
}

void loop() {
   emon1.calcVI(20,2000);
   float supplyVoltage   = emon1.Vrms;            
   emon2.calcVI(20,2000);      
   float supplyVoltage1   = emon2.Vrms;
   emon3.calcVI(20,2000);
   float supplyVoltage2   = emon3.Vrms; 
   double Irms2 = emon4.calcIrms(1480);
   double Irms3 = emon5.calcIrms(1480);
   double Irms4 = emon6.calcIrms(1480);

 float apparentPowerA = supplyVoltage * Irms2;
  float apparentPowerB = supplyVoltage1 * Irms3;
  float apparentPowerC = supplyVoltage2 * Irms4;

  float totalApparentPower = apparentPowerA + apparentPowerB + apparentPowerC;

  float realPowerA = apparentPowerA * 0.83; 
  float realPowerB = apparentPowerB * 0.72;
  float realPowerC = apparentPowerC * 0.64;

  float power = realPowerA + realPowerB + realPowerC;

  float powerfactor = power / totalApparentPower;
String Load_1VoltagePost,Load_2VoltagePost,Load_3VoltagePost,Load_4CurrentPost,Load_5CurrentPost,Load_6CurrentPost,Load_7powerPost,Load_8powerfactorPost,postData;
  double Load_1Voltage=supplyVoltage;
  double Load_2Voltage=supplyVoltage1;
  double Load_3Voltage=supplyVoltage2;
  double Load_4Current,Load_5Current,Load_6Current;
  if (Irms2<0.1)
  Load_4Current=0;
  else
  Load_4Current=Irms2;
  if (Irms3<0.1)
  Load_5Current=0;
  else
  Load_5Current=Irms3;
  if (Irms4<0.1)
  Load_6Current=0;
  else
  Load_6Current=Irms4;

  double Load_7power=power;
  double Load_8powerfactor=powerfactor;
delay(100);

  Load_1VoltagePost = String(Load_1Voltage);  
  Load_2VoltagePost = String(Load_2Voltage);  
  Load_3VoltagePost = String(Load_3Voltage);
  Load_4CurrentPost = String(Load_4Current);
  Load_5CurrentPost = String(Load_5Current);
  Load_6CurrentPost = String(Load_6Current);
  Load_7powerPost=String(Load_7power);
  Load_8powerfactorPost=String(Load_8powerfactor);
  char query[400];
  snprintf(query, sizeof(query), "INSERT INTO %s (Load_1Voltage, Load_2Voltage,  Load_3Voltage, Load_4Current, Load_5Current, Load_6Current, Load_7power, Load_8powerfactor) VALUES (%.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f)", table, Load_1VoltagePost, Load_2VoltagePost, Load_3VoltagePost, Load_4CurrentPost, Load_5CurrentPost, Load_6CurrentPost, Load_7powerPost, Load_8powerfactorPost);

  MySQL_Cursor *cur_mem = new MySQL_Cursor(&conn);
  cur_mem->execute(query);
  delete cur_mem;


  lcd.clear();
 lcd.setCursor(0, 0);
  lcd.print("R_V="+Load_1VoltagePost+" I="+Load_4CurrentPost);
  lcd.setCursor(0, 1);
  lcd.print("Y_V="+Load_2VoltagePost+" I="+Load_5CurrentPost);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("B_V="+Load_3VoltagePost+" I="+Load_6CurrentPost);
  lcd.setCursor(0, 1);
  lcd.print("KW = "+Load_7powerPost);
  delay(3000);
  lcd.clear();
  lcd.print("    P.F="+Load_8powerfactorPost);

  delay(2000);
}
