#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>
#include <Wire.h>


const int flowMeterPin = 2; 
volatile int flowCount = 0;
float flowRate = 0.0;
float totalLiters = 0.0;
unsigned long previousMillis = 0;
const unsigned long reportInterval = 1000; 


#define WIFI_SSID "hello"
#define WIFI_PASSWORD "123456789"

void setup() {
 Serial.begin(9600);
 pinMode(D0,OUTPUT);
 WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
 Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED){
    Serial.print(".");
   
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  digitalWrite(D0,0);
   delay(15000);
  digitalWrite(D0,1);
   attachInterrupt(digitalPinToInterrupt(flowMeterPin), pulseCounter, FALLING);
}
void loop() {

  unsigned long currentMillis = millis();

  flowRate = (flowCount / 7.5);
  totalLiters += flowRate / 60.0; 
   currentMillis - previousMillis >= reportInterval;
    Serial.print("Flow Rate: ");
    Serial.print(flowRate);
    Serial.print(" L/min\t");
    Serial.print("Total Liters: ");
    Serial.println(totalLiters);

    previousMillis = currentMillis;
    
  if(WiFi.status()== WL_CONNECTED){
        
      WiFiClient client;
      HTTPClient http;    
        
                                                                                  
    float voltage= flowRate;
     
  
String Load_1VoltagePost,postData;
 double Load_1Voltage=voltage;
 
delay(1000);
//Post Data
  Load_1VoltagePost = String(Load_1Voltage);   //String to interger conversion
 
  postData ="Load_1Voltage=" + Load_1VoltagePost ;

   http.begin(client,"http://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");    //Specify content-type header
 
  int httpCode = http.POST(postData);   //Send the request
  String payload = http.getString();    //Get the response payload

 
  Serial.println(httpCode);   //Print HTTP return code
  Serial.println(payload);    //Print request response payload
  
  Serial.println("Load_1Voltage=" + Load_1VoltagePost );
    //Serial.println("&Load_1Current=" + Load_1CurrentPost );

  http.end();  //Close connection

 
          }
 
  }
  void pulseCounter() {
  flowCount++;
}
